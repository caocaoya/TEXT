C51 COMPILER V9.52.0.0   SYSTEM                                                            11/01/2019 17:41:59 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE SYSTEM
OBJECT MODULE PLACED IN .\Output\System.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE Common\System.c LARGE OBJECTADVANCED OPTIMIZE(7,SPEED) BROWSE INCDIR(..\
                    -..\Include;.\head;.\Common) DEFINE(FOSC_160000) DEBUG PRINT(.\LST\System.lst) TABS(2) OBJECT(.\Output\System.obj)

line level    source

   1          #include "ALL_Includes.h"
   2          bit BIT_TMP;
   3          u16  DelaymS=0;
   4          u32  Timer_1s=0;
   5          Timer_Struct gTimer= {0,0,0,0};
   6          u16  System_Timer=0;
   7          /***************************************************************
   8          * 函数功能：时间计数函数
   9          * 输入参数：
  10          * 输出参数：
  11          ***************************************************************/
  12          /***************************************************************
  13          * 函数功能：时间计数函数
  14          * 输入参数：
  15          * 输出参数：
  16          ***************************************************************/
  17          void SysTick_Handler2(void)
  18          {
  19   1          ++gTimer.Tick20Msec;
  20   1          if((gTimer.Tick20Msec%5)==0)
  21   1          {
  22   2              bTemp100Msec=TIMER_SET;
  23   2          }
  24   1          if((gTimer.Tick20Msec%25)==0)
  25   1          {
  26   2              bTemp500Msec=TIMER_SET;
  27   2          }
  28   1          if(gTimer.Tick20Msec==50)
  29   1          {   gTimer.Tick20Msec=0;
  30   2              bTemp1Sec=TIMER_SET;
  31   2          }
  32   1      }
  33          void SysTick_Handler(void)
  34          {
  35   1          bTemp1Msec=TIMER_SET;
  36   1          ++gTimer.Tick1Msec;
  37   1          if((gTimer.Tick1Msec%2)==0)
  38   1          {
  39   2              bTemp2Msec=TIMER_SET;
  40   2          }
  41   1          if((gTimer.Tick1Msec%5)==0)
  42   1          {
  43   2              bTemp5Msec=TIMER_SET;
  44   2          }
  45   1          if((gTimer.Tick1Msec%10)==0)
  46   1          {
  47   2              bTemp10Msec=TIMER_SET;
  48   2          }
  49   1          if(gTimer.Tick1Msec==20)
  50   1          {
  51   2              gTimer.Tick1Msec=0;
  52   2              bTemp20Msec=TIMER_SET;
  53   2              SysTick_Handler2();
  54   2          }
C51 COMPILER V9.52.0.0   SYSTEM                                                            11/01/2019 17:41:59 PAGE 2   

  55   1          if(DelaymS>0)
  56   1          {
  57   2              DelaymS--;
  58   2          }
  59   1      
  60   1      }
  61          
  62          void SysTimer_Process(void)
  63          {
  64   1      //    EA=0;
  65   1          gTimer.Timer_Status.byte=gTimer.SysTick_Status.byte;
  66   1      
  67   1          if(gTimer.SysTick_Status.byte)
  68   1          {
  69   2              gTimer.SysTick_Status.byte=0;
  70   2      
  71   2          }
  72   1      
  73   1      
  74   1      //  gTimer.Timer_Status.byte=gTimer.SysTick_Status.byte;
  75   1      //  gTimer.SysTick_Status.byte=0;
  76   1      
  77   1      //    Clear_SysTick_Status
  78   1      //    EA=1;
  79   1      }
  80          void Delay10ms()    //@5.5296MHz
  81          {
  82   1        unsigned char i, j;
  83   1      
  84   1        i = 54;
  85   1        j = 199;
  86   1        do
  87   1        {
  88   2          while (--j);
  89   2        } while (--i);
  90   1      }
  91          
  92          /***************************************************************
  93          * 函数功能：定时器0初始化
  94          * 输入参数：
  95          * 输出参数：
  96          ***************************************************************/
  97          void Timer0Init(void)
  98          {
  99   1          TMOD&=0xF0;
 100   1          TMOD|=0x01;//模式1:16位计时器
 101   1          CKCON&=~0X08;//1/12系统时钟
 102   1          TL0 =Timer0_Reload;
 103   1          TH0 =Timer0_Reload>>8;      //中断时间为100us
 104   1          TR0=1;
 105   1          ET0= 1;
 106   1          EA = 1;
 107   1      }
 108          /***************************************************************
 109          * 函数功能：定时器1初始化
 110          * 输入参数：
 111          * 输出参数：
 112          ***************************************************************/
 113          void Timer1Init(void)
 114          {
 115   1          TMOD&=0x0F;
 116   1          TMOD|=0x10;//模式1:16位计时器
C51 COMPILER V9.52.0.0   SYSTEM                                                            11/01/2019 17:41:59 PAGE 3   

 117   1          CKCON&=~0X08;//1/12系统时钟
 118   1      //    TL1 =Timer1_Reload(PWM_Cycle);
 119   1      //    TH1 =Timer1_Reload(PWM_Cycle)>>8;     //中断时间为100us
 120   1          TR1=1;
 121   1          ET1= 1;
 122   1          EA = 1;
 123   1      }
 124          /***************************************************************
 125          * 函数功能：定时器0中断服务函数
 126          * 输入参数：
 127          * 输出参数：
 128          ***************************************************************/
 129          void Timer0_ISR (void) interrupt 1  //interrupt address is 0x000B
 130          {
 131   1          TL0 = Timer0_Reload;
 132   1          TH0 = Timer0_Reload>>8;
 133   1          SysTick_Handler();
 134   1          System_Timer++;
 135   1          LED_Sing=~LED_Sing;
 136   1      }
 137          void EXT1_ISR (void) interrupt 2  //外部中断服务函数
 138          {
 139   1      //  clr_IE1;//清除外部中断标志
 140   1      //  Receive_Packet();
 141   1      
 142   1      
 143   1      }
 144          /***************************************************************
 145          * 函数功能：定时器1中断服务函数
 146          * 输入参数：
 147          * 输出参数：
 148          ***************************************************************/
 149          
 150          void Timer1_ISR (void) interrupt 3  //interrupt address is 0x001B
 151          {
 152   1          u16 T1_Reload=0;
 153   1      
 154   1          TL1 =T1_Reload;
 155   1          TH1 =T1_Reload>>8;      //中断时间为10ms
 156   1      
 157   1      }
 158          void Timer2_ISR (void) interrupt 5
 159          {
 160   1          TF2=0;
 161   1      }
 162          u16 ADC_VAL;
 163          u16 Light_Val;
 164          void EXT_IO_ISR (void) interrupt 7
 165          {
 166   1      switch(PIF)
 167   1      {
 168   2        case   0:
 169   2          break;
 170   2        case   2:
 171   2      
 172   2               adc_init();
 173   2                Lignt_VDD=1;
 174   2              // Delay10ms();
 175   2               Light_Val=ADC_Read(4)>>4;//读取光强度
 176   2               Light_Val=256-Light_Val;
 177   2               ADCCON1&=~0x01;//关闭ADC电源
 178   2               Lignt_VDD=0;
C51 COMPILER V9.52.0.0   SYSTEM                                                            11/01/2019 17:41:59 PAGE 4   

 179   2               LED_OPEN_Time=(Default_LED_OPEN_Time*Light_Val)>>8;
 180   2               LED_OPEN_T=(0xff-(127-LED_OPEN_Time));
 181   2               LED_CLOSE_T=(0xff-LED_OPEN_Time);
 182   2               LED_Count=0;
 183   2               LED_Cycle=0;
 184   2               //ANO_DT_Send_Version(0XF1,Light_Val, LED_OPEN_Time,0 , 0, 0);
 185   2               set_WKTR; //开启唤醒定时器 
 186   2          break;
 187   2      
 188   2      }
 189   1      PIF=0;
 190   1      }
 191          
 192          void WKT_ISR (void) interrupt 17
 193          {
 194   1        clr_WKTF;
 195   1        //LED_Sing=0;
 196   1        clr_EPI;//关闭管脚中断
 197   1        Scan_LED();
 198   1        //P16_NC=~P16_NC;
 199   1      }
 200          /*********************************************************************************************************
             -***
 201          *    Timer2 Capture interrupt subroutine
 202          **********************************************************************************************************
             -**/
 203          //void Capture_ISR (void) interrupt 12
 204          //{
 205          //        clr_CAPF0;                          // clear capture0 interrupt flag
 206          ////        P1 = C0L;                           // For capture mode CxL/CxH with data capture from I/O pin
 207          ////        P2 = C0H;
 208          ////        P12 = ~P12;                         //toggle GPIO1 to show int
 209          // if((CAPCON1&0x03)==0)
 210          // {Rudder=MAKEWORD(C0H,C0L);
 211          ////  filter_Rudder = filter_Rudder - (filter_Rudder >> 1) + Rudder;
 212          ////    Rudder=(int16) (filter_Rudder >> 1);
 213          ////   if(Rudder>filter_Rudder_MAX)
 214          ////   {filter_Rudder_MAX=Rudder;}
 215          ////   if(Rudder<filter_Rudder_MIN)
 216          ////   {filter_Rudder_MIN=Rudder;}
 217          ////   Sum_Rudder+=Rudder;
 218          ////   Rudder_Sampling_Count++;
 219          //   filter_Rudder=Rudder>>4;
 220          ////   if(Rudder_Sampling_Count>=4)
 221          ////   {
 222          ////     Sum_Rudder-=filter_Rudder_MAX;
 223          ////     Sum_Rudder-=filter_Rudder_MIN;
 224          ////     filter_Rudder=Sum_Rudder;
 225          ////     filter_Rudder=filter_Rudder>>4;
 226          ////     if(filter_Rudder>Rudder_MAX)
 227          ////     {filter_Rudder=Rudder_MAX;}
 228          ////     if(filter_Rudder<Rudder_MIN)
 229          ////     {filter_Rudder=Rudder_MIN;}
 230          ////     Rudder_Sampling_Count=0;
 231          ////     Sum_Rudder=0;
 232          ////     filter_Rudder_MAX=0;
 233          ////     filter_Rudder_MIN=0xffff;
 234          ////                              }
 235          //     CAPCON1|=0x01;}
 236          // else
 237          // {CAPCON1&=~0x03;}
 238          //}
C51 COMPILER V9.52.0.0   SYSTEM                                                            11/01/2019 17:41:59 PAGE 5   

 239          /***************************************************************
 240          * 函数功能：初始化IO端口
 241          * 输入参数：
 242          * 输出参数：
 243          ***************************************************************/
 244          void Init_IO(void)
 245          {
 246   1          P0M1=P0M1_D;
 247   1          P0M2=P0M2_D;
 248   1          P0=P0_D;
 249   1      
 250   1          P1M1=P1M1_D;
 251   1          P1M2=P1M2_D;
 252   1          P1=P1_D;
 253   1      
 254   1          P2=P2_D;
 255   1      
 256   1          P3M1=P3M1_D;
 257   1          P3M2=P3M2_D;
 258   1          P3=P3_D;
 259   1      
 260   1      }
 261          void Set_System_Fre_10K(void)
 262          {
 263   1      set_LIRCST;//使能10K IRC
 264   1      set_OSC1;
 265   1      clr_OSC0;
 266   1      
 267   1      clr_BODEN;//关闭欠压检测功能
 268   1      clr_IAPEN;//失能IAP 
 269   1      clr_HIRCEN; //关闭16M IRC
 270   1      }
 271          void Set_System_Fre_16M(void)
 272          {
 273   1      set_HIRCST;//使能10K IRC
 274   1      clr_OSC1;
 275   1      clr_OSC0;
 276   1      clr_BODEN;//关闭欠压检测功能
 277   1      clr_IAPEN;//失能IAP
 278   1      clr_HIRCST; //关闭16M IRC 
 279   1        
 280   1      }
 281          /***************************************************************
 282          * 函数功能：自唤醒定时器
 283          * 输入参数：
 284          * 输出参数：
 285          ***************************************************************/
 286          void Init_WKT(void)
 287          {
 288   1      WKCON=Bin(00001011);
 289   1      RWK=254;
 290   1      set_EWKT;//中断使能
 291   1      
 292   1      EA = 1;
 293   1      }
 294          /***************************************************************
 295          * 函数功能：初始化外部中断
 296          * 输入参数：
 297          * 输出参数：
 298          ***************************************************************/
 299          void Init_EXT_IO_Interrupt(void)
 300          {
C51 COMPILER V9.52.0.0   SYSTEM                                                            11/01/2019 17:41:59 PAGE 6   

 301   1      PICON=Bin(00001000);
 302   1      PINEN=Bin(00000010);
 303   1      set_EPI;//使能管脚中断
 304   1      EA = 1;
 305   1      }
 306          void Delay500ms()   //@18.432MHz
 307          {
 308   1        unsigned char i, j, k;
 309   1      
 310   1        _nop_();
 311   1        _nop_();
 312   1        i = 36;
 313   1        j = 5;
 314   1        k = 211;
 315   1        do
 316   1        {
 317   2          do
 318   2          {
 319   3            while (--k);
 320   3          } while (--j);
 321   2        } while (--i);
 322   1      }
 323          /***************************************************************
 324          * 函数功能：系统初始化
 325          * 输入参数：
 326          * 输出参数：
 327          ***************************************************************/
 328          void InitSystem(void)
 329          {    
 330   1          u16 BG_1_22V;
 331   1          u16 VDD_VAL;
 332   1          Init_IO();
 333   1          Delay500ms();
 334   1        while(1);
 335   1          LED_0FF;
 336   1          INIT_SC7A21();
 337   1         // Timer0Init();
 338   1         // Timer1Init();
 339   1      //  adc_init();
 340   1       //   InitialUART0_Timer3(115200);
 341   1          //ReadEeprom(); //读取参数
 342   1        Init_EXT_IO_Interrupt();
 343   1        Init_WKT();
 344   1        Set_System_Fre_10K();
 345   1        while(1)
 346   1        { if(LED_Cycle>=1)
 347   2          { LED_0FF;
 348   3      
 349   3      //      GET1=1;
 350   3      //      COM1=0;
 351   3            clr_WKTR;
 352   3            PIF=0;
 353   3            set_EPI;}//周期到了后不运行自动唤醒
 354   2      //      BG_1_22V=ADC_Read(8);
 355   2      //      VDD_VAL=(u32)4096*122/BG_1_22V;
 356   2            
 357   2            set_PD;//进入休眠 
 358   2      
 359   2          }
 360   1        
 361   1      }
*** WARNING C280 IN LINE 330 OF Common\System.c: 'BG_1_22V': unreferenced local variable
C51 COMPILER V9.52.0.0   SYSTEM                                                            11/01/2019 17:41:59 PAGE 7   

*** WARNING C280 IN LINE 331 OF Common\System.c: 'VDD_VAL': unreferenced local variable
*** WARNING C294 IN LINE 335 OF Common\System.c: unreachable code


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    914    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     16       4
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  3 WARNING(S),  0 ERROR(S)
