C51 COMPILER V9.52.0.0   I2C_SOFTWARE                                                      11/01/2019 17:42:00 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE I2C_SOFTWARE
OBJECT MODULE PLACED IN .\Output\i2c_software.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE Code\i2c_software.c LARGE OBJECTADVANCED OPTIMIZE(7,SPEED) BROWSE INCDIR
                    -(..\..\Include;.\head;.\Common) DEFINE(FOSC_160000) DEBUG PRINT(.\LST\i2c_software.lst) TABS(2) OBJECT(.\Output\i2c_soft
                    -ware.obj)

line level    source

   1          #include "ALL_Includes.h"
   2          void delay(uint16_t dly_cnt)
   3          {
   4   1        while(dly_cnt--);
   5   1      }
   6          
   7          
   8          void i2cs_init( )
   9          {
  10   1      //    gpio_config(SCLK,OUTPUT,PULL_NONE);
  11   1      //    gpio_config(SDAT,OUTPUT,PULL_NONE);
  12   1      }
  13          
  14          void i2cs_start()
  15          {
  16   1        SDA0_HIGH();
  17   1        SCL0_HIGH();
  18   1        delay(10);
  19   1        SDA0_LOW();
  20   1        delay(10);
  21   1        SCL0_LOW();
  22   1      }
  23          
  24          void i2cs_stop()
  25          {
  26   1        SDA0_LOW();
  27   1        delay(3);
  28   1        SCL0_HIGH();
  29   1        SDA0_HIGH();
  30   1      }
  31          
  32          uint8_t i2cs_tx_byte(uint8_t dat)
  33          {
  34   1        uint8_t i;
  35   1        for(i=0;i<8;i++)
  36   1          {
  37   2          if(dat&0x80)
  38   2              {
  39   3            SDA0_HIGH();
  40   3          }
  41   2              else
  42   2              {
  43   3            SDA0_LOW();
  44   3          }
  45   2          SCL0_HIGH();
  46   2          
  47   2          SCL0_LOW();
  48   2          
  49   2          dat<<=1;
  50   2        }
  51   1        SDA0_SetInput();
  52   1          
  53   1        SCL0_HIGH();
C51 COMPILER V9.52.0.0   I2C_SOFTWARE                                                      11/01/2019 17:42:00 PAGE 2   

  54   1        
  55   1        i=SDA0_READ();
  56   1        
  57   1        SCL0_LOW();
  58   1        SDA0_SetOutput();
  59   1        return(i==0);
  60   1      }
  61          uint8_t i2cs_rx_byte(char ack)
  62          {
  63   1        uint8_t i;
  64   1        uint8_t r=0;
  65   1        SDA0_SetInput();
  66   1        delay(1);
  67   1        for(i=0;i<8;i++)
  68   1          {
  69   2          SCL0_HIGH();
  70   2          
  71   2          r<<=1;
  72   2          if(SDA0_READ())
  73   2              {
  74   3            r|=1;
  75   3          }
  76   2          SCL0_LOW();
  77   2        }
  78   1        SDA0_SetOutput();
  79   1        if(ack)
  80   1            SDA0_LOW();
  81   1        else
  82   1          SDA0_HIGH();
  83   1        SCL0_HIGH();
  84   1        delay(1);
  85   1        SCL0_LOW();
  86   1        SDA0_SetInput();
  87   1        return(r);
  88   1      }
  89          
  90          void i2cs_tx_data(uint8_t devAddr7,uint8_t addr,uint8_t*buf,uint8_t Size)
  91          {
  92   1        int i;
  93   1        i2cs_start();
  94   1          if(i2cs_tx_byte(devAddr7<<1)==0)
  95   1          {
  96   2          i2cs_stop();
  97   2          return;
  98   2        }
  99   1        if(i2cs_tx_byte(addr)==0)
 100   1        {
 101   2          i2cs_stop();
 102   2          return;
 103   2        }
 104   1        for(i=0;i<Size;i++)
 105   1          {
 106   2          if(i2cs_tx_byte(*buf++)==0)
 107   2          {
 108   3            i2cs_stop();
 109   3            return;
 110   3          }
 111   2        }
 112   1        i2cs_stop();
 113   1      }
 114          
 115          void i2cs_rx_data(uint8_t devAddr7,uint8_t addr,uint8_t*buf,uint8_t Size)
C51 COMPILER V9.52.0.0   I2C_SOFTWARE                                                      11/01/2019 17:42:00 PAGE 3   

 116          {
 117   1        uint8_t i;
 118   1        i2cs_start();
 119   1          if(i2cs_tx_byte(devAddr7<<1)==0)
 120   1        {
 121   2          i2cs_stop();
 122   2          return;
 123   2        }
 124   1        if(i2cs_tx_byte(addr)==0)
 125   1        {
 126   2          i2cs_stop();
 127   2          return;
 128   2        }
 129   1        i2cs_start();
 130   1        if(i2cs_tx_byte((devAddr7<<1)+1)==0)
 131   1        {
 132   2          i2cs_stop();
 133   2          return;
 134   2        }
 135   1        for(i=0;i<(Size-1);i++)
 136   1          {
 137   2          *buf++=i2cs_rx_byte(1);
 138   2        }
 139   1        *buf++=i2cs_rx_byte(0);
 140   1        SDA0_SetOutput();
 141   1        i2cs_stop();
 142   1      }
 143          
 144          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    515    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----      15
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
