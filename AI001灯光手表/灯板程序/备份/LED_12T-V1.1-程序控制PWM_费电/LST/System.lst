C51 COMPILER V9.52.0.0   SYSTEM                                                            10/22/2019 13:36:57 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE SYSTEM
OBJECT MODULE PLACED IN ..\Output\System.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ..\Common\System.c LARGE OBJECTADVANCED OPTIMIZE(7,SPEED) BROWSE INCDIR(
                    -..\Common;..\head) DEFINE(FOSC_160000) DEBUG PRINT(..\LST\System.lst) TABS(2) OBJECT(..\Output\System.obj)

line level    source

   1          #include "ALL_Includes.h"
   2          bit BIT_TMP;
   3          u16  DelaymS=0;
   4          u32  Timer_1s=0;
   5          Timer_Struct gTimer= {0,0,0,0};
   6          u16  System_Timer=0;
   7          void Delay100us()   //@5.5296MHz
   8          {
   9   1        unsigned char i, j;
  10   1      
  11   1        _nop_();
  12   1        i = 1;
  13   1        j = 134;
  14   1        do
  15   1        {
  16   2          while (--j);
  17   2        } while (--i);
  18   1      }
  19          void Set_System_Fre_10K(void)
  20          {
  21   1      set_LIRCST;//使能10K IRC
  22   1      set_OSC1;
  23   1      clr_OSC0;
  24   1      
  25   1      clr_BODEN;//关闭欠压检测功能
  26   1      clr_IAPEN;//失能IAP 
  27   1      clr_HIRCEN; //关闭16M IRC
  28   1      }
  29          void Set_System_Fre_16M(void)
  30          {
  31   1      set_HIRCST;//使能10K IRC
  32   1      clr_OSC1;
  33   1      clr_OSC0;
  34   1      clr_BODEN;//关闭欠压检测功能
  35   1      clr_IAPEN;//失能IAP
  36   1      clr_HIRCST; //关闭16M IRC 
  37   1        
  38   1      }
  39          /***************************************************************
  40          * 函数功能：时间计数函数
  41          * 输入参数：
  42          * 输出参数：
  43          ***************************************************************/
  44          /***************************************************************
  45          * 函数功能：时间计数函数
  46          * 输入参数：
  47          * 输出参数：
  48          ***************************************************************/
  49          void SysTick_Handler2(void)
  50          {
  51   1          ++gTimer.Tick20Msec;
  52   1          if((gTimer.Tick20Msec%5)==0)
  53   1          {
  54   2              bTemp100Msec=TIMER_SET;
C51 COMPILER V9.52.0.0   SYSTEM                                                            10/22/2019 13:36:57 PAGE 2   

  55   2          }
  56   1          if((gTimer.Tick20Msec%25)==0)
  57   1          {
  58   2              bTemp500Msec=TIMER_SET;
  59   2          }
  60   1          if(gTimer.Tick20Msec==50)
  61   1          {   gTimer.Tick20Msec=0;
  62   2              bTemp1Sec=TIMER_SET;
  63   2          }
  64   1      }
  65          void SysTick_Handler(void)
  66          {
  67   1          bTemp1Msec=TIMER_SET;
  68   1          ++gTimer.Tick1Msec;
  69   1          if((gTimer.Tick1Msec%2)==0)
  70   1          {
  71   2              bTemp2Msec=TIMER_SET;
  72   2          }
  73   1          if((gTimer.Tick1Msec%5)==0)
  74   1          {
  75   2              bTemp5Msec=TIMER_SET;
  76   2          }
  77   1          if((gTimer.Tick1Msec%10)==0)
  78   1          {
  79   2              bTemp10Msec=TIMER_SET;
  80   2          }
  81   1          if(gTimer.Tick1Msec==20)
  82   1          {
  83   2              gTimer.Tick1Msec=0;
  84   2              bTemp20Msec=TIMER_SET;
  85   2              SysTick_Handler2();
  86   2          }
  87   1          if(DelaymS>0)
  88   1          {
  89   2              DelaymS--;
  90   2          }
  91   1      
  92   1      }
  93          
  94          void SysTimer_Process(void)
  95          {
  96   1      //    EA=0;
  97   1          gTimer.Timer_Status.byte=gTimer.SysTick_Status.byte;
  98   1      
  99   1          if(gTimer.SysTick_Status.byte)
 100   1          {
 101   2              gTimer.SysTick_Status.byte=0;
 102   2      
 103   2          }
 104   1      
 105   1      
 106   1      //  gTimer.Timer_Status.byte=gTimer.SysTick_Status.byte;
 107   1      //  gTimer.SysTick_Status.byte=0;
 108   1      
 109   1      //    Clear_SysTick_Status
 110   1      //    EA=1;
 111   1      }
 112          /***************************************************************
 113          * 函数功能：定时器0初始化
 114          * 输入参数：
 115          * 输出参数：
 116          ***************************************************************/
C51 COMPILER V9.52.0.0   SYSTEM                                                            10/22/2019 13:36:57 PAGE 3   

 117          void Timer0Init(void)
 118          {
 119   1          TMOD&=0xF0;
 120   1          TMOD|=0x01;//模式1:16位计时器
 121   1       //   CKCON&=~0X08;//1/12系统时钟
 122   1          set_T0M;//定时器 0 的时钟源选择为系统时钟
 123   1          TL0 =Timer0_Reload;
 124   1          TH0 =Timer0_Reload>>8;      //中断时间为100us
 125   1          TR0=1;
 126   1          ET0= 1;
 127   1          EA = 1;
 128   1      }
 129          /***************************************************************
 130          * 函数功能：定时器1初始化
 131          * 输入参数：
 132          * 输出参数：
 133          ***************************************************************/
 134          void Timer1Init(void)
 135          {
 136   1          TMOD&=0x0F;
 137   1          TMOD|=0x10;//模式1:16位计时器
 138   1       //   CKCON&=~0X08;//1/12系统时钟
 139   1      //    TL1 =Timer1_Reload(PWM_Cycle);
 140   1      //    TH1 =Timer1_Reload(PWM_Cycle)>>8;     //中断时间为100us
 141   1          TR1=1;
 142   1          ET1= 1;
 143   1          EA = 1;
 144   1      }
 145          /***************************************************************
 146          * 函数功能：外部中断服务函数
 147          * 输入参数：
 148          * 输出参数：
 149          ***************************************************************/
 150          void EXT0_ISR (void) interrupt 0  //interrupt address is 0x000B
 151          {
 152   1       clr_IE0;//清除外部中断标志
 153   1       SL_SC7A21_CLICK_SERVICE();
 154   1      }
 155          /***************************************************************
 156          * 函数功能：定时器0中断服务函数
 157          * 输入参数：
 158          * 输出参数：
 159          ***************************************************************/
 160          void Timer0_ISR (void) interrupt 1  //interrupt address is 0x000B
 161          {
 162   1          TL0 = Timer0_Reload;
 163   1          TH0 = Timer0_Reload>>8;
 164   1        
 165   1      //    TL0 = 0XF6;
 166   1      //    TH0 = 0XFF;
 167   1          SysTick_Handler();
 168   1         System_Timer++;
 169   1         // LED_Sing=~LED_Sing;
 170   1        P16_NC=~P16_NC;
 171   1      }
 172          void EXT1_ISR (void) interrupt 2  //外部中断服务函数
 173          {
 174   1        clr_IE1;//清除外部中断标志
 175   1      //  Receive_Packet();
 176   1      SL_SC7A21_WRIST_INT12_SERVICE_FUNCTION();
 177   1      
 178   1      }
C51 COMPILER V9.52.0.0   SYSTEM                                                            10/22/2019 13:36:57 PAGE 4   

 179          /***************************************************************
 180          * 函数功能：定时器1中断服务函数
 181          * 输入参数：
 182          * 输出参数：
 183          ***************************************************************/
 184          
 185          void Timer1_ISR (void) interrupt 3  //interrupt address is 0x001B
 186          {
 187   1          u16 T1_Reload=0;
 188   1      
 189   1          TL1 =T1_Reload;
 190   1          TH1 =T1_Reload>>8;      //中断时间为10ms
 191   1      
 192   1      }
 193          void Timer2_ISR (void) interrupt 5
 194          {
 195   1          TF2=0;
 196   1      }
 197          u16 ADC_VAL;
 198          u16 Light_Val;
 199          void EXT_IO_ISR (void) interrupt 7
 200          {
 201   1      switch(PIF)
 202   1      {
 203   2        case   0:
 204   2          break;
 205   2        case   2:
 206   2               Lignt_VDD=1;
 207   2               adc_init();
 208   2               Light_Val=ADC_Read(4)>>4;//读取光强度
 209   2               Light_Val=0xff-Light_Val;
 210   2               ADCCON1&=~0x01;//关闭ADC电源
 211   2               Lignt_VDD=0;
 212   2        
 213   2      //         LED_OPEN_Time=(Default_LED_OPEN_Time*Light_Val)>>8;
 214   2      //         LED_OPEN_T=(0xff-(127-LED_OPEN_Time));
 215   2      //         LED_CLOSE_T=(0xff-LED_OPEN_Time);
 216   2               LED_Count=0;
 217   2               LED_Minute=0;
 218   2               set_WKTR; //开启唤醒定时器 
 219   2          break;
 220   2      
 221   2      }
 222   1      PIF=0;
 223   1      }
 224          
 225          void WKT_ISR (void) interrupt 17
 226          {
 227   1        clr_WKTF;
 228   1        //LED_Sing=0;
 229   1        clr_EPI;//关闭管脚中断
 230   1      //  Set_System_Fre_16M();
 231   1        Scan_LED();
 232   1        TXD=~TXD;
 233   1      //Set_System_Fre_10K();
 234   1        //TXD=COM1;
 235   1      }
 236          /*********************************************************************************************************
             -***
 237          *    Timer2 Capture interrupt subroutine
 238          **********************************************************************************************************
             -**/
C51 COMPILER V9.52.0.0   SYSTEM                                                            10/22/2019 13:36:57 PAGE 5   

 239          //void Capture_ISR (void) interrupt 12
 240          //{
 241          //        clr_CAPF0;                          // clear capture0 interrupt flag
 242          ////        P1 = C0L;                           // For capture mode CxL/CxH with data capture from I/O pin
 243          ////        P2 = C0H;
 244          ////        P12 = ~P12;                         //toggle GPIO1 to show int
 245          // if((CAPCON1&0x03)==0)
 246          // {Rudder=MAKEWORD(C0H,C0L);
 247          ////  filter_Rudder = filter_Rudder - (filter_Rudder >> 1) + Rudder;
 248          ////    Rudder=(int16) (filter_Rudder >> 1);
 249          ////   if(Rudder>filter_Rudder_MAX)
 250          ////   {filter_Rudder_MAX=Rudder;}
 251          ////   if(Rudder<filter_Rudder_MIN)
 252          ////   {filter_Rudder_MIN=Rudder;}
 253          ////   Sum_Rudder+=Rudder;
 254          ////   Rudder_Sampling_Count++;
 255          //   filter_Rudder=Rudder>>4;
 256          ////   if(Rudder_Sampling_Count>=4)
 257          ////   {
 258          ////     Sum_Rudder-=filter_Rudder_MAX;
 259          ////     Sum_Rudder-=filter_Rudder_MIN;
 260          ////     filter_Rudder=Sum_Rudder;
 261          ////     filter_Rudder=filter_Rudder>>4;
 262          ////     if(filter_Rudder>Rudder_MAX)
 263          ////     {filter_Rudder=Rudder_MAX;}
 264          ////     if(filter_Rudder<Rudder_MIN)
 265          ////     {filter_Rudder=Rudder_MIN;}
 266          ////     Rudder_Sampling_Count=0;
 267          ////     Sum_Rudder=0;
 268          ////     filter_Rudder_MAX=0;
 269          ////     filter_Rudder_MIN=0xffff;
 270          ////                              }
 271          //     CAPCON1|=0x01;}
 272          // else
 273          // {CAPCON1&=~0x03;}
 274          //}
 275          /***************************************************************
 276          * 函数功能：初始化IO端口
 277          * 输入参数：
 278          * 输出参数：
 279          ***************************************************************/
 280          void Init_IO(void)
 281          {
 282   1          P0M1=P0M1_D;
 283   1          P0M2=P0M2_D;
 284   1          P0=P0_D;
 285   1      
 286   1          P1M1=P1M1_D;
 287   1          P1M2=P1M2_D;
 288   1          P1=P1_D;
 289   1      
 290   1          P2=P2_D;
 291   1      
 292   1          P3M1=P3M1_D;
 293   1          P3M2=P3M2_D;
 294   1          P3=P3_D;
 295   1      
 296   1      }
 297          
 298          /***************************************************************
 299          * 函数功能：自唤醒定时器
 300          * 输入参数：
C51 COMPILER V9.52.0.0   SYSTEM                                                            10/22/2019 13:36:57 PAGE 6   

 301          * 输出参数：
 302          ***************************************************************/
 303          void Init_WKT(void)
 304          {
 305   1      WKCON=Bin(00001011);//64分频
 306   1      RWK=254;
 307   1      set_EWKT;//中断使能
 308   1      EA = 1;
 309   1      }
 310          /***************************************************************
 311          * 函数功能：初始化外部中断
 312          * 输入参数：
 313          * 输出参数：
 314          ***************************************************************/
 315          void Init_EXT_IO_Interrupt(void)
 316          {
 317   1      PICON=Bin(00001000);
 318   1      PINEN=Bin(00000010);
 319   1      set_EPI;//使能管脚中断
 320   1      EA = 1;
 321   1      }
 322          /***************************************************************
 323          * 函数功能：初始化外部中断0
 324          * 输入参数：
 325          * 输出参数：
 326          ***************************************************************/
 327          void Init_EXT0_Interrupt(void)
 328          {
 329   1      IT0=1;//下降沿触发
 330   1      IE0=1;//打开中断
 331   1        EX0=1;
 332   1      EA = 1;
 333   1      }
 334          /****************************************
 335          ***********************
 336          * 函数功能：初始化外部中断1
 337          * 输入参数：
 338          * 输出参数：
 339          ***************************************************************/
 340          void Init_EXT1_Interrupt(void)
 341          {
 342   1        IT1=1;//下降沿触发
 343   1        IE1=1;//打开中断
 344   1        EX1=1;
 345   1        EA = 1;
 346   1      } 
 347          /***************************************************************
 348          * 函数功能：系统初始化
 349          * 输入参数：
 350          * 输出参数：
 351          ***************************************************************/
 352          void InitSystem(void)
 353          {    
 354   1          u16 BG_1_22V;
 355   1          u16 VDD_VAL;
 356   1          Init_IO();
 357   1         Delay100us();
 358   1          LED_0FF;
 359   1         // INIT_SC7A21();
 360   1          SL_SC7A21_INIT();
 361   1          Timer0Init();
 362   1         // Timer1Init();
C51 COMPILER V9.52.0.0   SYSTEM                                                            10/22/2019 13:36:57 PAGE 7   

 363   1       // adc_init();
 364   1          InitialUART0_Timer3(115200);
 365   1          //ReadEeprom(); //读取参数
 366   1       Init_EXT0_Interrupt();
 367   1       Init_EXT1_Interrupt();
 368   1      // Init_EXT_IO_Interrupt();
 369   1        Init_WKT();
 370   1        Set_System_Fre_10K();
 371   1      
 372   1        
 373   1      }
*** WARNING C280 IN LINE 354 OF ..\Common\System.c: 'BG_1_22V': unreferenced local variable
*** WARNING C280 IN LINE 355 OF ..\Common\System.c: 'VDD_VAL': unreferenced local variable


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1002    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     16       4
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  2 WARNING(S),  0 ERROR(S)
